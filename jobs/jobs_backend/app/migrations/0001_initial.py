# Generated by Django 3.2.4 on 2021-08-10 15:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jobs_backend.app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nfc_email', models.EmailField(max_length=254)),
                ('nfkc_email', models.EmailField(max_length=254, unique=True)),
                ('nfc_company_name', models.CharField(blank=True, max_length=50)),
                ('nfkc_company_name', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=False)),
                ('is_employer', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', jobs_backend.app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Posting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=150)),
                ('work_title', models.CharField(db_index=True, max_length=50)),
                ('description', models.CharField(max_length=500)),
                ('work_type', models.CharField(choices=[('FT', 'Fulltime'), ('PT', 'Parttime'), ('TP', 'Temporary'), ('CT', 'Consultant')], default='FT', max_length=2)),
                ('weekly_hours', models.IntegerField()),
                ('locally_bound', models.BooleanField(default=True)),
                ('city', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employer', models.ForeignKey(limit_choices_to={'is_employer': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='related employer')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('cover_letter', models.CharField(max_length=3000)),
                ('cv_link', models.URLField(max_length=800)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='related applicant')),
                ('posting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs_backend.posting', verbose_name='related posting')),
            ],
            options={
                'unique_together': {('posting', 'email')},
            },
        ),
    ]
